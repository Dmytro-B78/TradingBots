# NeuroTrade — Changes Log

## [0.3] — 2025‑09‑23
### Fixed
- Исправлен вызов `cfg.get` в RiskGuard (теперь используется `default={}`).
- Удалены не‑ASCII символы и эмодзи из `guard.py` (кодировка UTF‑8).
- Smoke‑тест успешно пройден (`pytest tests/test_smoke.py` — PASSED).

### Added
- Создан `changes.log` для отслеживания истории изменений.

### Notes
- Зафиксирован Git‑тег `stage0.3_fix`.
- Подготовка к ветке `release/0.4`.

---

## [0.2] — 2025‑09‑18
### Fixed
- Исправлен баг с повторным заголовком в `trades_log.csv` (`executor.py`).

### Notes
- Все тесты пройдены успешно (`pytest -v`).
- Созданы резервные копии проекта до и после обновления паспорта.
## [0.4] — in progress (2025‑09‑23)
### Fixed
- RiskGuard: исправлена обработка `cfg.get` (dict + Config).
- RiskGuard: добавлен кулдаун по символам.
- RiskGuard: локализованы сообщения (русский язык).
- Все тесты успешно пройдены (12/12).

### Notes
- Git‑тег `stage0.4_dev`.
- Подготовка к расширению логирования и тестов в 0.4.
## [0.4] — in progress (2025‑09‑23)
### Fixed
- RiskGuard: исправлена обработка `cfg.get` (dict + Config).
- RiskGuard: добавлен кулдаун по символам.
- RiskGuard: локализованы сообщения (русский язык).
- Все тесты успешно пройдены (12/12).

### Notes
- Git‑тег `stage0.4_dev`.
- Подготовка к расширению логирования и тестов в 0.4.
2025-10-02 18:30:19 — Тесты выполнены\n============================= test session starts =============================
platform win32 -- Python 3.13.1, pytest-8.4.2, pluggy-1.6.0
rootdir: C:\TradingBots\NT
configfile: pytest.ini
plugins: cov-7.0.0

----------------------------- live log collection -----------------------------
DEBUG    tzlocal:win32.py:55 Looking up time zone info from registry
collected 69 items / 1 error

=================================== ERRORS ====================================
________________ ERROR collecting tests/test_sl_tp_extended.py ________________
C:\Users\Dimon\AppData\Local\Programs\Python\Python313\Lib\site-packages\_pytest\python.py:498: in importtestmodule
    mod = import_path(
C:\Users\Dimon\AppData\Local\Programs\Python\Python313\Lib\site-packages\_pytest\pathlib.py:587: in import_path
    importlib.import_module(module_name)
C:\Users\Dimon\AppData\Local\Programs\Python\Python313\Lib\importlib\__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<frozen importlib._bootstrap>:1387: in _gcd_import
    ???
<frozen importlib._bootstrap>:1360: in _find_and_load
    ???
<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:935: in _load_unlocked
    ???
C:\Users\Dimon\AppData\Local\Programs\Python\Python313\Lib\site-packages\_pytest\assertion\rewrite.py:177: in exec_module
    source_stat, co = _rewrite_test(fn, self.config)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Users\Dimon\AppData\Local\Programs\Python\Python313\Lib\site-packages\_pytest\assertion\rewrite.py:357: in _rewrite_test
    tree = ast.parse(source, filename=strfn)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Users\Dimon\AppData\Local\Programs\Python\Python313\Lib\ast.py:54: in parse
    return compile(source, filename, mode, flags,
E     File "C:\TradingBots\NT\tests\test_sl_tp_extended.py", line 1
E       : tests/test_sl_tp_extended.py ===
E       ^
E   SyntaxError: invalid syntax
=========================== short test summary info ===========================
ERROR tests/test_sl_tp_extended.py
!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!
============================== 1 error in 9.86s ===============================
\n2025-10-02 18:46:06 — Тесты выполнены\n============================= test session starts =============================
platform win32 -- Python 3.13.1, pytest-8.4.2, pluggy-1.6.0
rootdir: C:\TradingBots\NT
configfile: pytest.ini
plugins: cov-7.0.0

----------------------------- live log collection -----------------------------
DEBUG    tzlocal:win32.py:55 Looking up time zone info from registry
collected 76 items

tests/test_backtest_engine.py::test_backtest_engine_empty_and_with_data 
-------------------------------- live log call --------------------------------
INFO     bot_ai.backtest.backtest_engine:backtest_engine.py:58 [BACKTEST] SMA завершён. Сделок нет.
FAILED                                                                   [  1%]

================================== FAILURES ===================================
__________________ test_backtest_engine_empty_and_with_data ___________________

monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x000001C22C680180>
tmp_path = WindowsPath('C:/Users/Dimon/AppData/Local/Temp/pytest-of-Dimon/pytest-72/test_backtest_engine_empty_and0')

    def test_backtest_engine_empty_and_with_data(monkeypatch, tmp_path):
        from bot_ai.backtest import backtest_engine
    
        # Фиктивный cfg
        cfg = type("Cfg", (), {})()
        cfg.exchange = "binance"
    
        # 1. Пустые пары → сразу return
        result_empty = backtest_engine.run_backtest(cfg, [], lambda df: None, "SMA", days=1, timeframes=["1h"])
>       assert result_empty is None
E       assert Empty DataFrame\nColumns: []\nIndex: [] is None

tests\test_backtest_engine.py:12: AssertionError
------------------------------ Captured log call ------------------------------
INFO     bot_ai.backtest.backtest_engine:backtest_engine.py:58 [BACKTEST] SMA завершён. Сделок нет.
=========================== short test summary info ===========================
FAILED tests/test_backtest_engine.py::test_backtest_engine_empty_and_with_data
!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!
============================== 1 failed in 5.90s ==============================
\n2025-10-02 18:53:54 — Target=local — CoverageMin=85 — Status=UNKNOWN
============================= test session starts ============================= platform win32 -- Python 3.13.1, pytest-8.4.2, pluggy-1.6.0 rootdir: C:\TradingBots\NT configfile: pytest.ini plugins: cov-7.0.0  ----------------------------- live log collection ----------------------------- DEBUG    tzlocal:win32.py:55 Looking up time zone info from registry collected 76 items  tests/test_backtest_engine.py::test_backtest_engine_empty_and_with_data  -------------------------------- live log call -------------------------------- INFO     bot_ai.backtest.backtest_engine:backtest_engine.py:58 [BACKTEST] SMA ╨╖╨░╨▓╨╡╤А╤И╤С╨╜. ╨б╨┤╨╡╨╗╨╛╨║ ╨╜╨╡╤В. FAILED                                                                   [  1%]  ================================== FAILURES =================================== __________________ test_backtest_engine_empty_and_with_data ___________________  monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x0000024E04A70180> tmp_path = WindowsPath('C:/Users/Dimon/AppData/Local/Temp/pytest-of-Dimon/pytest-73/test_backtest_engine_empty_and0')      def test_backtest_engine_empty_and_with_data(monkeypatch, tmp_path):         from bot_ai.backtest import backtest_engine              # ╨д╨╕╨║╤В╨╕╨▓╨╜╤Л╨╣ cfg         cfg = type("Cfg", (), {})()         cfg.exchange = "binance"              # 1. ╨Я╤Г╤Б╤В╤Л╨╡ ╨┐╨░╤А╤Л тЖТ ╤Б╤А╨░╨╖╤Г return         result_empty = backtest_engine.run_backtest(cfg, [], lambda df: None, "SMA", days=1, timeframes=["1h"]) >       assert result_empty is None E       assert Empty DataFrame\nColumns: []\nIndex: [] is None  tests\test_backtest_engine.py:12: AssertionError ------------------------------ Captured log call ------------------------------ INFO     bot_ai.backtest.backtest_engine:backtest_engine.py:58 [BACKTEST] SMA ╨╖╨░╨▓╨╡╤А╤И╤С╨╜. ╨б╨┤╨╡╨╗╨╛╨║ ╨╜╨╡╤В. =========================== short test summary info =========================== FAILED tests/test_backtest_engine.py::test_backtest_engine_empty_and_with_data !!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!! ============================== 1 failed in 2.53s ==============================

2025-10-02 18:56:11 — Target=local — CoverageMin=85 — Status=UNKNOWN
============================= test session starts ============================= platform win32 -- Python 3.13.1, pytest-8.4.2, pluggy-1.6.0 rootdir: C:\TradingBots\NT configfile: pytest.ini plugins: cov-7.0.0  ----------------------------- live log collection ----------------------------- DEBUG    tzlocal:win32.py:55 Looking up time zone info from registry collected 76 items  tests/test_backtest_engine.py::test_backtest_engine_empty_and_with_data  -------------------------------- live log call -------------------------------- INFO     bot_ai.backtest.backtest_engine:backtest_engine.py:58 [BACKTEST] SMA ╨╖╨░╨▓╨╡╤А╤И╤С╨╜. ╨б╨┤╨╡╨╗╨╛╨║ ╨╜╨╡╤В. FAILED                                                                   [  1%]  ================================== FAILURES =================================== __________________ test_backtest_engine_empty_and_with_data ___________________  monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x000001C790334180> tmp_path = WindowsPath('C:/TradingBots/NT/.pytest_temp/test_backtest_engine_empty_and0')      def test_backtest_engine_empty_and_with_data(monkeypatch, tmp_path):         from bot_ai.backtest import backtest_engine              # ╨д╨╕╨║╤В╨╕╨▓╨╜╤Л╨╣ cfg         cfg = type("Cfg", (), {})()         cfg.exchange = "binance"              # 1. ╨Я╤Г╤Б╤В╤Л╨╡ ╨┐╨░╤А╤Л тЖТ ╤Б╤А╨░╨╖╤Г return         result_empty = backtest_engine.run_backtest(cfg, [], lambda df: None, "SMA", days=1, timeframes=["1h"]) >       assert result_empty is None E       assert Empty DataFrame\nColumns: []\nIndex: [] is None  tests\test_backtest_engine.py:12: AssertionError ------------------------------ Captured log call ------------------------------ INFO     bot_ai.backtest.backtest_engine:backtest_engine.py:58 [BACKTEST] SMA ╨╖╨░╨▓╨╡╤А╤И╤С╨╜. ╨б╨┤╨╡╨╗╨╛╨║ ╨╜╨╡╤В. =========================== short test summary info =========================== FAILED tests/test_backtest_engine.py::test_backtest_engine_empty_and_with_data !!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!! ============================== 1 failed in 2.44s ==============================

2025-10-02 18:56:55 — Target=local — CoverageMin=85 — Status=UNKNOWN
============================= test session starts ============================= platform win32 -- Python 3.13.1, pytest-8.4.2, pluggy-1.6.0 rootdir: C:\TradingBots\NT configfile: pytest.ini plugins: cov-7.0.0  ----------------------------- live log collection ----------------------------- DEBUG    tzlocal:win32.py:55 Looking up time zone info from registry collected 76 items  tests/test_backtest_engine.py::test_backtest_engine_empty_and_with_data  -------------------------------- live log call -------------------------------- INFO     bot_ai.backtest.backtest_engine:backtest_engine.py:58 [BACKTEST] SMA ╨╖╨░╨▓╨╡╤А╤И╤С╨╜. ╨б╨┤╨╡╨╗╨╛╨║ ╨╜╨╡╤В. FAILED                                                                   [  1%]  ================================== FAILURES =================================== __________________ test_backtest_engine_empty_and_with_data ___________________  monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x000001FC32CE4180> tmp_path = WindowsPath('C:/TradingBots/NT/.pytest_temp/test_backtest_engine_empty_and0')      def test_backtest_engine_empty_and_with_data(monkeypatch, tmp_path):         from bot_ai.backtest import backtest_engine              # ╨д╨╕╨║╤В╨╕╨▓╨╜╤Л╨╣ cfg         cfg = type("Cfg", (), {})()         cfg.exchange = "binance"              # 1. ╨Я╤Г╤Б╤В╤Л╨╡ ╨┐╨░╤А╤Л тЖТ ╤Б╤А╨░╨╖╤Г return         result_empty = backtest_engine.run_backtest(cfg, [], lambda df: None, "SMA", days=1, timeframes=["1h"]) >       assert result_empty is None E       assert Empty DataFrame\nColumns: []\nIndex: [] is None  tests\test_backtest_engine.py:12: AssertionError ------------------------------ Captured log call ------------------------------ INFO     bot_ai.backtest.backtest_engine:backtest_engine.py:58 [BACKTEST] SMA ╨╖╨░╨▓╨╡╤А╤И╤С╨╜. ╨б╨┤╨╡╨╗╨╛╨║ ╨╜╨╡╤В. =========================== short test summary info =========================== FAILED tests/test_backtest_engine.py::test_backtest_engine_empty_and_with_data !!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!! ============================== 1 failed in 2.47s ==============================

2025-10-02 18:58:15 — Target=local — CoverageMin=85 — Status=UNKNOWN
============================= test session starts ============================= platform win32 -- Python 3.13.1, pytest-8.4.2, pluggy-1.6.0 rootdir: C:\TradingBots\NT configfile: pytest.ini plugins: cov-7.0.0  ----------------------------- live log collection ----------------------------- DEBUG    tzlocal:win32.py:55 Looking up time zone info from registry collected 76 items  tests/test_backtest_engine.py::test_backtest_engine_empty_and_with_data  -------------------------------- live log call -------------------------------- INFO     bot_ai.backtest.backtest_engine:backtest_engine.py:58 [BACKTEST] SMA ╨╖╨░╨▓╨╡╤А╤И╤С╨╜. ╨б╨┤╨╡╨╗╨╛╨║ ╨╜╨╡╤В. FAILED                                                                   [  1%]  ================================== FAILURES =================================== __________________ test_backtest_engine_empty_and_with_data ___________________  monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x00000221730D4180> tmp_path = WindowsPath('C:/TradingBots/NT/.pytest_temp/test_backtest_engine_empty_and0')      def test_backtest_engine_empty_and_with_data(monkeypatch, tmp_path):         from bot_ai.backtest import backtest_engine              # ╨д╨╕╨║╤В╨╕╨▓╨╜╤Л╨╣ cfg         cfg = type("Cfg", (), {})()         cfg.exchange = "binance"              # 1. ╨Я╤Г╤Б╤В╤Л╨╡ ╨┐╨░╤А╤Л тЖТ ╤Б╤А╨░╨╖╤Г return         result_empty = backtest_engine.run_backtest(cfg, [], lambda df: None, "SMA", days=1, timeframes=["1h"]) >       assert result_empty is None E       assert Empty DataFrame\nColumns: []\nIndex: [] is None  tests\test_backtest_engine.py:12: AssertionError ------------------------------ Captured log call ------------------------------ INFO     bot_ai.backtest.backtest_engine:backtest_engine.py:58 [BACKTEST] SMA ╨╖╨░╨▓╨╡╤А╤И╤С╨╜. ╨б╨┤╨╡╨╗╨╛╨║ ╨╜╨╡╤В. =========================== short test summary info =========================== FAILED tests/test_backtest_engine.py::test_backtest_engine_empty_and_with_data !!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!! ============================== 1 failed in 2.50s ==============================

2025-10-02 18:58:29 — Target=ci — CoverageMin=85 — Status=UNKNOWN
============================= test session starts ============================= platform win32 -- Python 3.13.1, pytest-8.4.2, pluggy-1.6.0 rootdir: C:\TradingBots\NT configfile: pytest.ini plugins: cov-7.0.0  ----------------------------- live log collection ----------------------------- DEBUG    tzlocal:win32.py:55 Looking up time zone info from registry collected 76 items  tests/test_backtest_engine.py::test_backtest_engine_empty_and_with_data  -------------------------------- live log call -------------------------------- INFO     bot_ai.backtest.backtest_engine:backtest_engine.py:58 [BACKTEST] SMA ╨╖╨░╨▓╨╡╤А╤И╤С╨╜. ╨б╨┤╨╡╨╗╨╛╨║ ╨╜╨╡╤В. FAILED                                                                   [  1%]  ================================== FAILURES =================================== __________________ test_backtest_engine_empty_and_with_data ___________________  monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x000001B6CE474180> tmp_path = WindowsPath('C:/TradingBots/NT/.pytest_temp/test_backtest_engine_empty_and0')      def test_backtest_engine_empty_and_with_data(monkeypatch, tmp_path):         from bot_ai.backtest import backtest_engine              # ╨д╨╕╨║╤В╨╕╨▓╨╜╤Л╨╣ cfg         cfg = type("Cfg", (), {})()         cfg.exchange = "binance"              # 1. ╨Я╤Г╤Б╤В╤Л╨╡ ╨┐╨░╤А╤Л тЖТ ╤Б╤А╨░╨╖╤Г return         result_empty = backtest_engine.run_backtest(cfg, [], lambda df: None, "SMA", days=1, timeframes=["1h"]) >       assert result_empty is None E       assert Empty DataFrame\nColumns: []\nIndex: [] is None  tests\test_backtest_engine.py:12: AssertionError ------------------------------ Captured log call ------------------------------ INFO     bot_ai.backtest.backtest_engine:backtest_engine.py:58 [BACKTEST] SMA ╨╖╨░╨▓╨╡╤А╤И╤С╨╜. ╨б╨┤╨╡╨╗╨╛╨║ ╨╜╨╡╤В. =========================== short test summary info =========================== FAILED tests/test_backtest_engine.py::test_backtest_engine_empty_and_with_data !!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!! ============================== 1 failed in 2.47s ==============================

